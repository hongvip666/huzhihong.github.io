<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git的使用</title>
      <link href="/2019/03/20/git-de-shi-yong/"/>
      <url>/2019/03/20/git-de-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="Git是什么？"><a href="#Git是什么？" class="headerlink" title="Git是什么？"></a>Git是什么？</h1><blockquote><p>Git是目前世界上最先进的分布式版本控制系统（没有之一）。<br>Git有什么特点？简单来说就是：高端大气上档次！下面简单介绍下git本人使用记录</p></blockquote><p><strong>ssh公钥</strong>是用来和git服务器进行数据交换的,一般生产的SSH 密钥存储在其 ~/.ssh 目录下,正常情况下会有<strong>id_rsa</strong>(这是私钥,自己用来解锁服务端传过来数据的)和<strong>id_rsa.pub</strong>(公钥,服务端解锁数据的)</p><h2 id="一-生成git公钥"><a href="#一-生成git公钥" class="headerlink" title="一.生成git公钥"></a>一.生成git公钥</h2><p>1.生成公钥命令</p><pre><code>ssh-keygen -o -t rsa -C &quot;403808052@qq.com&quot; -b 4096</code></pre><p>2.执行查看公钥的命令</p><pre><code>cat ~/.ssh/id_rsa.pub  </code></pre><p>3.将生成的公钥复制到<a href="https://gitee.com/signup" target="_blank" rel="noopener">码云</a>公钥上,一般公钥都是以你的邮箱结尾的.</p><h2 id="二-gi本地代码上传"><a href="#二-gi本地代码上传" class="headerlink" title="二.gi本地代码上传"></a>二.gi本地代码上传</h2><p>1.把本地写好的项目放到码云或者github上（该目录下右键    Git Bash Here打开命令）</p><pre><code>  git  init           // 项目初始化                                git add .           // 添加文件（切记add后面有空格） // 把你需要的本地文件推送到缓存区（辅助命令，查看你的状态，红色代表工作区，绿色代表缓存区）  git status          git commit -m &quot;代码提交&quot;               // 从本地仓库的暂缓区到本地仓库  git remote add origin +地址            // 创建一个本地仓库  git remote                             // 查看本地仓库是否创建成功  git remote                             // 查看本地仓库是否创建成功  git pull --rebase origin  master       // 把你离线的东西拉回本地仓库（辅助）  git push origin master                 // 把远程仓库推送到线上   </code></pre><p>2.报错问题<br><img src="https://images2018.cnblogs.com/blog/1357696/201804/1357696-20180417152703454-145388971.png" alt="报错信息"></p><pre class=" language-html"><code class="language-html">   // 报错信息* branch   master  ->FETCH_HEADatal:refusing to merge unrelated histories </code></pre><p>3.在操作过程中有可能会遇到以下错误只要以下操作即可</p><pre><code>$ git pull origin master --allow-unrelated-histories</code></pre><p>这样就算上传成功了</p><h3 id="三-合并分支-git冲突-忽略文件"><a href="#三-合并分支-git冲突-忽略文件" class="headerlink" title="三.合并分支/git冲突/忽略文件"></a>三.合并分支/git冲突/忽略文件</h3><p>1.加上–no-ff 参数就可以用普通模式合并，合并后的历史有分支</p><pre><code>//强制添加忽略文件(-f 参数)git merge --no-ff -m &quot;xxx&quot; dev</code></pre><p>2.查看分支合并图</p><pre><code>git log --graph </code></pre><p>3.git设置忽略文件</p><pre><code>//强制添加忽略文件(-f 参数)git add -f info.log</code></pre><p>4.git冲突</p><blockquote><p><strong>什么情况下回出现冲突</strong><br>     在不同的分支上改动了相同的文件,git就懵逼了，不知道该怎么合并</p></blockquote><blockquote><p><strong>解决方案: </strong><br>    当git无法自动合并分支是，就必须首先解决冲突。解决冲突后，在提交，合并完成。解决冲突就是把Git 合并失败的文件手动编辑为我们希望的内容，再提交。</p></blockquote><h2 id="五-关于版本回退"><a href="#五-关于版本回退" class="headerlink" title="五.关于版本回退"></a>五.关于版本回退</h2><p>1.版本回退</p><pre><code>git reset –hard HEAD^       (^代表一个版本)</code></pre><p>2.删除<br>   现在有两个操作选择:</p><pre><code>git rm filename               删除掉 然后再提交 (正常删除)git checkout – filename       恢复到原来的版本(失误删除)</code></pre><p>2.撤销修改</p><pre><code>git checkout – filename        filename没有被放到暂存区</code></pre><pre><code>git reset HEAD &lt;file&gt;          (暂存区 返回上一个版本)</code></pre>]]></content>
      
      
      <categories>
          
          <category> 在线工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java-工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue学习案例入门(一)</title>
      <link href="/2019/03/18/vue-xue-xi-an-li-ru-men-yi/"/>
      <url>/2019/03/18/vue-xue-xi-an-li-ru-men-yi/</url>
      
        <content type="html"><![CDATA[<p>话不多说,上代码</p><blockquote><p>1.差值表达式的使用</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token operator">!</span><span class="token constant">DOCTYPE</span> html<span class="token operator">></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ie<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span></span>Document<span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></span>    <span class="token markup"><span class="token comment" spellcheck="true">&lt;!-- 1.使用vue必须要引入包 --></span></span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./lib/vue.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span>      <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span></span>        <span class="token punctuation">[</span>v<span class="token operator">-</span>cloak<span class="token punctuation">]</span><span class="token punctuation">{</span>            display<span class="token punctuation">:</span> none<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span>           <span class="token markup"><span class="token comment" spellcheck="true">&lt;!--v-cloak可解决闪烁问题 替换插值表达式 占位符 --></span></span>           <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-cloak</span><span class="token punctuation">></span></span></span><span class="token punctuation">{</span><span class="token punctuation">{</span> msg <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></span>           <span class="token markup"><span class="token comment" spellcheck="true">&lt;!-- 不带闪烁问题 替换的是 text 内容值 --></span></span>           <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span> <span class="token attr-name">v-text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span></span>           <span class="token markup"><span class="token comment" spellcheck="true">&lt;!-- 表示这是一个html标签 --></span></span>           <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>msg2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span></span>          <span class="token keyword">var</span> vn<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            el<span class="token punctuation">:</span> <span class="token string">"#app"</span><span class="token punctuation">,</span>   <span class="token comment" spellcheck="true">//表示当前 vue 示例 要控制页面上那个区域</span>            data<span class="token punctuation">:</span> <span class="token punctuation">{</span>       <span class="token comment" spellcheck="true">//表示 el 中要用到的数据</span>                msg<span class="token punctuation">:</span> <span class="token string">"huzhihong"</span><span class="token punctuation">,</span>                msg2<span class="token punctuation">:</span> <span class="token string">'&lt;h4>这是一个h4标题&lt;/h4>'</span>            <span class="token punctuation">}</span>              <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></span><span class="token markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> js框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>inno setup学习入门</title>
      <link href="/2019/03/12/inno-setup-ru-men/"/>
      <url>/2019/03/12/inno-setup-ru-men/</url>
      
        <content type="html"><![CDATA[<h1 id="Inno-Setup是什么？"><a href="#Inno-Setup是什么？" class="headerlink" title="Inno Setup是什么？"></a>Inno Setup是什么？</h1><blockquote><p>Inno Setup 是一个免费的 Windows 安装程序制作软件。第一次发表是在 1997 年。话不多说,开整</p></blockquote><h2 id="组件相关"><a href="#组件相关" class="headerlink" title="组件相关"></a>组件相关</h2><h3 id="文本框-编辑框"><a href="#文本框-编辑框" class="headerlink" title="文本框/编辑框"></a>文本框/编辑框</h3><blockquote><p>编辑框也叫文本框，是典型的窗口可视化组件，既可以用来输入文本，<br>也可以用来显示文本，是程序设计中最常用的组件之一，可以获取用户输入的许多信息。<br>Pascal中的编辑框由类Tedit实现，该类的定义如下：</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token punctuation">[</span>code<span class="token punctuation">]</span><span class="token keyword">var</span>  <span class="token comment" spellcheck="true">//类型定义</span>  mypage<span class="token punctuation">:</span>TwizardPage<span class="token punctuation">;</span>  lb1<span class="token punctuation">,</span>lb2<span class="token punctuation">,</span>lb3<span class="token punctuation">:</span>TLabel<span class="token punctuation">;</span>  ed1<span class="token punctuation">,</span>ed2<span class="token punctuation">,</span>ed3<span class="token punctuation">:</span>TEdit<span class="token punctuation">;</span>  ClientUrl<span class="token punctuation">,</span>WampPort<span class="token punctuation">,</span>ClientPort<span class="token punctuation">:</span>String<span class="token punctuation">;</span>procedure <span class="token function">InitializeWizard</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>begin  mypage<span class="token punctuation">:</span><span class="token operator">=</span><span class="token function">CreateCustomPage</span><span class="token punctuation">(</span>wpWelcome<span class="token punctuation">,</span><span class="token string">'数据统计'</span><span class="token punctuation">,</span><span class="token string">'配置默认的网址'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//文本框标题</span>  lb1 <span class="token punctuation">:</span><span class="token operator">=</span> TLabel<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>mypage<span class="token punctuation">)</span><span class="token punctuation">;</span>  lb1<span class="token punctuation">.</span><span class="token keyword">Parent</span><span class="token punctuation">:</span><span class="token operator">=</span>mypage<span class="token punctuation">.</span>Surface<span class="token punctuation">;</span>  lb1<span class="token punctuation">.</span>Caption <span class="token punctuation">:</span><span class="token operator">=</span> <span class="token string">'服务器地址:'</span><span class="token punctuation">;</span>  lb1<span class="token punctuation">.</span>Top <span class="token punctuation">:</span><span class="token operator">=</span> lb1<span class="token punctuation">.</span>Top<span class="token operator">+</span><span class="token number">50</span><span class="token punctuation">;</span>  lb1<span class="token punctuation">.</span>Autosize <span class="token punctuation">:</span><span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//文本框内容</span>  ed1<span class="token punctuation">:</span><span class="token operator">=</span>TEdit<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>mypage<span class="token punctuation">)</span><span class="token punctuation">;</span>  ed1<span class="token punctuation">.</span><span class="token keyword">Parent</span><span class="token punctuation">:</span><span class="token operator">=</span>mypage<span class="token punctuation">.</span>Surface<span class="token punctuation">;</span>  ed1<span class="token punctuation">.</span>Width<span class="token punctuation">:</span><span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">;</span>  ed1<span class="token punctuation">.</span>Left <span class="token punctuation">:</span><span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>  ed1<span class="token punctuation">.</span>Top <span class="token punctuation">:</span><span class="token operator">=</span> lb1<span class="token punctuation">.</span>Top<span class="token punctuation">;</span>  ed1<span class="token punctuation">.</span>Text<span class="token punctuation">:</span><span class="token operator">=</span><span class="token string">'127.0.0.1'</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//ip</span>  lb2 <span class="token punctuation">:</span><span class="token operator">=</span> TLabel<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>mypage<span class="token punctuation">)</span><span class="token punctuation">;</span>  lb2<span class="token punctuation">.</span><span class="token keyword">Parent</span><span class="token punctuation">:</span><span class="token operator">=</span>mypage<span class="token punctuation">.</span>Surface<span class="token punctuation">;</span>  lb2<span class="token punctuation">.</span>Caption <span class="token punctuation">:</span><span class="token operator">=</span> <span class="token string">'服务器端口:'</span><span class="token punctuation">;</span>  Lb2<span class="token punctuation">.</span>Top<span class="token punctuation">:</span><span class="token operator">=</span>lb1<span class="token punctuation">.</span>Top<span class="token operator">+</span><span class="token number">50</span><span class="token punctuation">;</span>  lb2<span class="token punctuation">.</span>Autosize <span class="token punctuation">:</span><span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  ed2<span class="token punctuation">:</span><span class="token operator">=</span>TEdit<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>mypage<span class="token punctuation">)</span><span class="token punctuation">;</span>  ed2<span class="token punctuation">.</span><span class="token keyword">Parent</span><span class="token punctuation">:</span><span class="token operator">=</span>mypage<span class="token punctuation">.</span>Surface<span class="token punctuation">;</span>  ed2<span class="token punctuation">.</span>Width<span class="token punctuation">:</span><span class="token operator">=</span><span class="token number">200</span><span class="token punctuation">;</span>  ed2<span class="token punctuation">.</span>Left <span class="token punctuation">:</span><span class="token operator">=</span> <span class="token number">80</span><span class="token punctuation">;</span>  ed2<span class="token punctuation">.</span>Top <span class="token punctuation">:</span><span class="token operator">=</span> ed1<span class="token punctuation">.</span>Top<span class="token operator">+</span><span class="token number">50</span><span class="token punctuation">;</span>  ed2<span class="token punctuation">.</span>Text<span class="token punctuation">:</span><span class="token operator">=</span><span class="token string">'8083'</span><span class="token punctuation">;</span> end<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//读取文本框内容并修改配置文件ini中内容  </span><span class="token keyword">function</span> <span class="token function">NextButtonClick</span> <span class="token punctuation">(</span> CurPageID <span class="token punctuation">:</span> Integer<span class="token punctuation">)</span><span class="token punctuation">:</span> Boolean<span class="token punctuation">;</span>begin    ClientUrl<span class="token punctuation">:</span><span class="token operator">=</span> ed1<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>    WampPort<span class="token punctuation">:</span><span class="token operator">=</span> ed2<span class="token punctuation">.</span>Text<span class="token punctuation">;</span>    Result <span class="token punctuation">:</span><span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>end<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">MyConst</span><span class="token punctuation">(</span>Param<span class="token punctuation">:</span> String<span class="token punctuation">)</span><span class="token punctuation">:</span> String<span class="token punctuation">;</span>begin  Result <span class="token punctuation">:</span><span class="token operator">=</span> ClientUrl<span class="token punctuation">;</span>end<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">MyConst2</span><span class="token punctuation">(</span>Param<span class="token punctuation">:</span> String<span class="token punctuation">)</span><span class="token punctuation">:</span> String<span class="token punctuation">;</span>begin  Result <span class="token punctuation">:</span><span class="token operator">=</span> WampPort<span class="token punctuation">;</span>end<span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">MyConst3</span><span class="token punctuation">(</span>Param<span class="token punctuation">:</span> String<span class="token punctuation">)</span><span class="token punctuation">:</span> String<span class="token punctuation">;</span>begin  Result <span class="token punctuation">:</span><span class="token operator">=</span> ClientPort<span class="token punctuation">;</span>end<span class="token punctuation">;</span></code></pre><h3 id="列表框-复选框"><a href="#列表框-复选框" class="headerlink" title="列表框/复选框"></a>列表框/复选框</h3><blockquote><p>列表框 （ListBox）是Windows应用程序中重要的输入手段，<br>其中包括多个选项用户可以从其中选择一个或者多个，程序根据用户的选择做出相应的处理，<br>列表框在外观上和存储框类似，但是行为却有很大的不同，列表框中项一般是预先给定的，<br>而存储框则可以让用户进行输入，并且列表框中的项被选择之后也会触发事件。<br>Pascal脚本中列表框的类由TlistBox实现，其定义如下:</p></blockquote><pre class=" language-php"><code class="language-php">TListBox <span class="token operator">=</span> <span class="token keyword">class</span><span class="token punctuation">(</span>TCustomListBox<span class="token punctuation">)</span>property BorderStyle<span class="token punctuation">:</span> TBorderStyle<span class="token punctuation">;</span> read write<span class="token punctuation">;</span>property Color<span class="token punctuation">:</span> TColor<span class="token punctuation">;</span> read write<span class="token punctuation">;</span>property Font<span class="token punctuation">:</span> TFont<span class="token punctuation">;</span> read write<span class="token punctuation">;</span>property MultiSelect<span class="token punctuation">:</span> Boolean<span class="token punctuation">;</span> read write<span class="token punctuation">;</span>property Sorted<span class="token punctuation">:</span> Boolean<span class="token punctuation">;</span> read write<span class="token punctuation">;</span>property Style<span class="token punctuation">:</span> TListBoxStyle<span class="token punctuation">;</span> read write<span class="token punctuation">;</span>property OnClick<span class="token punctuation">:</span> TNotifyEvent<span class="token punctuation">;</span> read write<span class="token punctuation">;</span>property OnDblClick<span class="token punctuation">:</span> TNotifyEvent<span class="token punctuation">;</span> read write<span class="token punctuation">;</span>property OnKeyDown<span class="token punctuation">:</span> TKeyEvent<span class="token punctuation">;</span> read write<span class="token punctuation">;</span>property OnKeyPress<span class="token punctuation">:</span> TKeyPressEvent<span class="token punctuation">;</span> read write<span class="token punctuation">;</span>property OnKeyUp<span class="token punctuation">:</span> TKeyEvent<span class="token punctuation">;</span> read write<span class="token punctuation">;</span>end<span class="token punctuation">;</span></code></pre><h3 id="安装语言选项"><a href="#安装语言选项" class="headerlink" title="安装语言选项"></a>安装语言选项</h3><blockquote><p>nno Setup安装目录下有一个Languages的文件夹，该文件夹提供了可供使用的语言，<br>通过在脚本中加入[languages]段，可以实现该项功能，实现代码如下：</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token punctuation">[</span>languages<span class="token punctuation">]</span>Name<span class="token punctuation">:</span> <span class="token string">"en"</span><span class="token punctuation">;</span> MessagesFile<span class="token punctuation">:</span> <span class="token string">"compiler:Default.isl"</span>Name<span class="token punctuation">:</span> <span class="token string">"cs"</span><span class="token punctuation">;</span> MessagesFile<span class="token punctuation">:</span> <span class="token string">"compiler:Languages\ChineseSimp.isl"</span></code></pre><blockquote><p>安装过程中会根据用户的选择采用不同的语言界面：<br><img src="http://img534.ph.126.net/i2AUZYjOg9JbY4AWdZvI3Q==/1318147315937156941.jpg" alt></p></blockquote><h3 id="安装添加图片"><a href="#安装添加图片" class="headerlink" title="安装添加图片"></a>安装添加图片</h3><blockquote><p>图片必须放在脚本文件相同的目录下，如果不是，需要提供完整的路径，并且必须是BMP的位图，手册上规定图片的最大尺寸是164x314 pixels，但是稍微超出似乎也没有什么问题</p></blockquote><pre class=" language-php"><code class="language-php"><span class="token punctuation">[</span>setup<span class="token punctuation">]</span>AppName<span class="token operator">=</span>TestAppVerName<span class="token operator">=</span><span class="token constant">TEST</span>DefaultDirName<span class="token operator">=</span><span class="token string">"E:\TEST"</span>AppVersion<span class="token operator">=</span><span class="token number">1.0</span>WizardImageFile<span class="token operator">=</span>dh<span class="token punctuation">.</span>bmp<span class="token punctuation">[</span>files<span class="token punctuation">]</span>Source<span class="token punctuation">:</span> <span class="token string">"F:\desktop\ipmsg.exe"</span><span class="token punctuation">;</span> DestDir<span class="token punctuation">:</span> <span class="token string">"{app}"</span></code></pre><h3 id="桌面快捷方式"><a href="#桌面快捷方式" class="headerlink" title="桌面快捷方式"></a>桌面快捷方式</h3><pre class=" language-php"><code class="language-php"><span class="token punctuation">[</span>icons<span class="token punctuation">]</span>Name<span class="token punctuation">:</span><span class="token punctuation">:</span> <span class="token string">"{userdesktop}\飞鸽传书"</span><span class="token punctuation">;</span>Filename<span class="token punctuation">:</span> <span class="token string">"{app}\ipmsg.EXE"</span><span class="token punctuation">;</span> WorkingDir<span class="token punctuation">:</span> <span class="token string">"{app}"</span></code></pre><blockquote><p>注意Icons段中的一些选项：</p></blockquote><ul><li><p><strong>Name</strong> ：要创建的快捷方式的名字和位置，上例中将会在当前用户的桌面创建一个名为“飞鸽传书”快捷图标，该选项是是必须的。</p></li><li><p><strong>FileName**</strong> ：快捷方式的命令行文件名，即快捷方式指向的实际可执行文件，这里是ipmsg.exe文件，该项为必须的。</p></li><li><p><strong>Parameters</strong> ：Parameters：快捷方式的可选命令行参数，如果编写的是一个命令行方式的可执行文件，额可以通过该选项传递参数，一般的可执行文件都不需要该选项。</p></li><li><p><strong>WorkingDir</strong> ：快捷方式的工作 (或启动) 目录，就是指示程序在哪个目录开始运行。</p></li><li><p><strong>HotKey<em>**</em></strong> ：快捷方式的热键 (或快捷键) 设置，就是可以用于启动程序的组合键</p></li><li><p><strong>Comment**</strong> ：指定快捷方式的注释 (或描述) 对象，当鼠标移动到该快捷方式上的时候会有一个黄色的小窗口给出提示，一般是该程序的描述。</p></li><li><p><strong>IconFileName</strong> ：要显示的自定义图标文件名。这可以是一个包含图标文件的可执行映像即.exe或者.dll)也可以是一个.ico 文件，默认会采用原可执行文件的图标。</p></li><li><p><strong>IconIndex</strong> ：指定的文件中使用的以零为基点的图标索引，这是因为有些Icon可以存放在.dll文件中，例如操作系统中的shell32.dll文件，保存有100多个图标，如果- <strong>IconFileName</strong> ：指定的是该文件（一般位于C:\WINDOWS\system32目录下），那么IconIndex 就指定了使用哪个图标。</p></li></ul><h2 id="Pascal脚本概述"><a href="#Pascal脚本概述" class="headerlink" title="Pascal脚本概述"></a>Pascal脚本概述</h2><h3 id="Files-段"><a href="#Files-段" class="headerlink" title="[Files] 段"></a>[Files] 段</h3><blockquote><p>[Files]段通常用来将文件打包到安装包中,如果是需要安装过后读取本地文件,则需要将<a href="#文件释放">文件释放</a></p></blockquote><pre class=" language-php"><code class="language-php"><span class="token punctuation">[</span>Files<span class="token punctuation">]</span><span class="token comment" spellcheck="true">//需要打包文件 Source表示本地文件， DestDir表示安装包资源文件目录</span><span class="token comment" spellcheck="true">//前者的 {tmp}表示本地的 脚本根目录下的 {tmp} 目录，后者表示 exe运行后的临时目录</span><span class="token comment" spellcheck="true">//  * 表示任何文件</span>Source<span class="token punctuation">:</span> <span class="token string">"F:\Users\Admin\Desktop\第一次测试\安装目录\TimePRO.exe"</span><span class="token punctuation">;</span> DestDir<span class="token punctuation">:</span> <span class="token string">"{app}"</span><span class="token punctuation">;</span> Flags<span class="token punctuation">:</span> ignoreversionSource<span class="token punctuation">:</span> <span class="token string">"F:\Users\Admin\Desktop\第一次测试\安装目录\Client.ini"</span><span class="token punctuation">;</span> DestDir<span class="token punctuation">:</span> <span class="token string">"{app}"</span><span class="token punctuation">;</span> Flags<span class="token punctuation">:</span> ignoreversion</code></pre><h3 id="Code-段"><a href="#Code-段" class="headerlink" title="[Code] 段"></a>[Code] 段</h3><h4 id="文件释放"><a href="#文件释放" class="headerlink" title="文件释放"></a>文件释放</h4><blockquote><p>文件释放的意思就是将已经打包到exe安装包中文件,在安装后解压到你指定的位置.</p></blockquote><pre class=" language-php"><code class="language-php">   <span class="token comment" spellcheck="true">//告诉安装包你ini怎么用</span><span class="token keyword">function</span> <span class="token function">ImgLoad5</span><span class="token punctuation">(</span>Wnd <span class="token punctuation">:</span><span class="token constant">HWND</span><span class="token punctuation">;</span> FileName <span class="token punctuation">:</span>PAnsiChar<span class="token punctuation">;</span> Left<span class="token punctuation">,</span> Top<span class="token punctuation">,</span> Width<span class="token punctuation">,</span> Height <span class="token punctuation">:</span>integer<span class="token punctuation">;</span> Stretch<span class="token punctuation">,</span> IsBkg <span class="token punctuation">:</span>boolean<span class="token punctuation">)</span> <span class="token punctuation">:</span>Longint<span class="token punctuation">;</span> external <span class="token string">'ImgLoad@{tmp}\Client.ini stdcall delayload'</span><span class="token punctuation">;</span>procedure <span class="token function">ImgSetVisibility5</span><span class="token punctuation">(</span>img <span class="token punctuation">:</span>Longint<span class="token punctuation">;</span> Visible <span class="token punctuation">:</span>boolean<span class="token punctuation">)</span><span class="token punctuation">;</span> external <span class="token string">'ImgSetVisibility@{tmp}\Client.ini stdcall delayload'</span><span class="token punctuation">;</span></code></pre><pre><code>//初始化开始界面procedure InitializeWizard();beginSelectPortPage; //这是配置文件页面//ini安装包释放  {tmp}表示本地的ExpandConstant(&#39;{tmp}\Client.ini&#39;) end;</code></pre><h4 id="JDK运行环境"><a href="#JDK运行环境" class="headerlink" title="JDK运行环境"></a>JDK运行环境</h4><blockquote><p>本段介绍的是如何保证exe文件在没有jdk环境下运行,实现安装jdk并自动配置java环境变量</p></blockquote><p>1.[File]段将jdk加载到exe中</p><pre class=" language-php"><code class="language-php">Source<span class="token punctuation">:</span> <span class="token string">"F:\Users\Admin\Desktop\第一次测试\安装目录\jdk-8u201-windows-x64.exe"</span><span class="token punctuation">;</span> DestDir<span class="token punctuation">:</span> <span class="token string">"{app}"</span><span class="token punctuation">;</span> Flags<span class="token punctuation">:</span> ignoreversion              <span class="token comment" spellcheck="true">//ignoreversion 表示卸载删除</span></code></pre><p>2.设置环境变量加到注册表(Const不能运行请更改 inno setup版本到5.5.1)</p><pre class=" language-php"><code class="language-php"><span class="token keyword">Const</span>  <span class="token constant">WM_SETTINGCHANGE</span> <span class="token operator">=</span> <span class="token variable">$1A</span><span class="token punctuation">;</span>  <span class="token constant">SMTO_ABORTIFHUNG</span> <span class="token operator">=</span> <span class="token variable">$2</span><span class="token punctuation">;</span><span class="token keyword">Function</span> <span class="token function">SendMessageTimeout</span><span class="token punctuation">(</span>hwnd<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> wParam<span class="token punctuation">:</span> LongInt<span class="token punctuation">;</span> lParam<span class="token punctuation">:</span> String<span class="token punctuation">;</span> fuFlags<span class="token punctuation">,</span> uTimeout<span class="token punctuation">:</span> LongInt<span class="token punctuation">;</span> <span class="token keyword">var</span> lpdwResult<span class="token punctuation">:</span> LongInt<span class="token punctuation">)</span><span class="token punctuation">:</span> LongInt<span class="token punctuation">;</span>external <span class="token string">'SendMessageTimeoutA@user32.dll stdcall'</span><span class="token punctuation">;</span><span class="token keyword">var</span>  iRes<span class="token punctuation">:</span> LongInt<span class="token punctuation">;</span>procedure <span class="token function">SetEnv</span><span class="token punctuation">(</span>aEnvName<span class="token punctuation">,</span> aEnvValue<span class="token punctuation">:</span> string<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//设置环境变量</span>begin  <span class="token function">RegWriteStringValue</span><span class="token punctuation">(</span><span class="token constant">HKEY_LOCAL_MACHINE</span><span class="token punctuation">,</span> <span class="token string">'SYSTEM\CurrentControlSet\Control\Session Manager\Environment'</span><span class="token punctuation">,</span> aEnvName<span class="token punctuation">,</span> aEnvValue<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//刷新环境变量 不需要重启生效</span>  <span class="token function">SendMessageTimeout</span><span class="token punctuation">(</span><span class="token constant">HWND_BROADCAST</span><span class="token punctuation">,</span> <span class="token constant">WM_SETTINGCHANGE</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">'Environment'</span><span class="token punctuation">,</span> <span class="token constant">SMTO_ABORTIFHUNG</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> iRes<span class="token punctuation">)</span><span class="token punctuation">;</span>end<span class="token punctuation">;</span><span class="token keyword">var</span>JavaDirStr<span class="token punctuation">:</span>string<span class="token punctuation">;</span><span class="token keyword">function</span> CheckJre8<span class="token punctuation">:</span>boolean <span class="token punctuation">;</span><span class="token keyword">var</span>ResultStr<span class="token punctuation">:</span>string<span class="token punctuation">;</span><span class="token constant">HKLMS</span><span class="token punctuation">:</span>Integer<span class="token punctuation">;</span>begin  <span class="token constant">HKLMS</span><span class="token punctuation">:</span><span class="token operator">=</span><span class="token constant">HKLM</span>  <span class="token keyword">IF</span> IsWin64<span class="token operator">=</span><span class="token constant">TRUE</span> <span class="token constant">THEN</span>  <span class="token constant">BEGIN</span>  <span class="token constant">HKLMS</span><span class="token punctuation">:</span><span class="token operator">=</span><span class="token constant">HKLM64</span>  <span class="token constant">END</span>     <span class="token comment" spellcheck="true">//添加到注册表</span>  result<span class="token punctuation">:</span><span class="token operator">=</span> <span class="token function">RegQueryStringValue</span><span class="token punctuation">(</span><span class="token constant">HKLMS</span><span class="token punctuation">,</span><span class="token string">'SOFTWARE\JavaSoft\Java Development Kit\1.8'</span><span class="token punctuation">,</span><span class="token string">'JavaHome'</span><span class="token punctuation">,</span>JavaDirStr<span class="token punctuation">)</span>end<span class="token punctuation">;</span></code></pre><p>3.指定jdk到安装目录</p><pre class=" language-php"><code class="language-php">procedure <span class="token function">CurStepChanged</span><span class="token punctuation">(</span>CurStep<span class="token punctuation">:</span> TSetupStep<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span>rcode<span class="token punctuation">:</span>integer<span class="token punctuation">;</span>begin  <span class="token keyword">if</span> CurStep<span class="token operator">=</span>ssPostInstall then  begin    <span class="token keyword">if</span> CheckJre8<span class="token operator">=</span><span class="token boolean">false</span> then    begin      <span class="token keyword">if</span> IsWin64<span class="token operator">=</span><span class="token boolean">true</span> then      begin        <span class="token function">ExecAndWait</span><span class="token punctuation">(</span><span class="token function">ExpandConstant</span><span class="token punctuation">(</span><span class="token string">'{tmp}\jdk-8u201-windows-x64.exe'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token constant">SW_SHOW</span><span class="token punctuation">,</span> True<span class="token punctuation">)</span><span class="token punctuation">;</span>      end <span class="token keyword">else</span>      begin        <span class="token function">ExecAndWait</span><span class="token punctuation">(</span><span class="token function">ExpandConstant</span><span class="token punctuation">(</span><span class="token string">'{tmp}\jdk-8u201-windows-x64.exe'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token constant">SW_SHOW</span><span class="token punctuation">,</span> True<span class="token punctuation">)</span><span class="token punctuation">;</span>      end    end  end  <span class="token keyword">if</span> <span class="token punctuation">(</span>CurStep<span class="token operator">=</span>ssDone<span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>CheckJre8<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">)</span> then  begin   <span class="token comment" spellcheck="true">//JavaHome为环境变量 path</span>    <span class="token function">SetEnv</span><span class="token punctuation">(</span><span class="token string">'JavaHome'</span><span class="token punctuation">,</span>JavaDirStr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//安装环境变量</span>  end  <span class="token keyword">if</span> CurStep<span class="token operator">=</span>ssDone then  begin      PosStr  endend<span class="token punctuation">;</span></code></pre><h4 id="读取ini并更改其内容"><a href="#读取ini并更改其内容" class="headerlink" title="读取ini并更改其内容"></a>读取ini并更改其内容</h4><blockquote><p>比如在config.ini中有如下配置     </p></blockquote><p>[config]</p><p>WampPort=8103  </p><p>ClientPort=9090</p><p>ClientUrl=192.168.1.119</p><p>_ <strong>由于项目需要,需要删除[config] 但是inno setup又必须要这个段才能写文本,一下提出解决方案</strong></p><pre class=" language-php"><code class="language-php"><span class="token comment" spellcheck="true">//去掉ini文本 段</span><span class="token keyword">function</span> <span class="token function">LoadStringsFromFile</span><span class="token punctuation">(</span><span class="token keyword">const</span> str<span class="token punctuation">:</span> String<span class="token punctuation">;</span> <span class="token keyword">var</span> S<span class="token punctuation">:</span> TArrayOfString<span class="token punctuation">)</span><span class="token punctuation">:</span> Boolean<span class="token punctuation">;</span><span class="token keyword">var</span>  File<span class="token punctuation">,</span> PosString<span class="token punctuation">:</span> string<span class="token punctuation">;</span>  FileLines<span class="token punctuation">:</span> string<span class="token punctuation">;</span>  i<span class="token punctuation">:</span> Integer<span class="token punctuation">;</span>  Isok<span class="token punctuation">:</span>boolean<span class="token punctuation">;</span>begin  File<span class="token punctuation">:</span><span class="token operator">=</span> <span class="token function">ExpandConstant</span><span class="token punctuation">(</span><span class="token string">'{src}\database.ini'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  PosString<span class="token punctuation">:</span><span class="token operator">=</span>str  <span class="token function">LoadStringFromFile</span><span class="token punctuation">(</span>File<span class="token punctuation">,</span> FileLines<span class="token punctuation">)</span><span class="token punctuation">;</span>  Isok<span class="token punctuation">:</span><span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">Pos</span><span class="token punctuation">(</span>PosString<span class="token punctuation">,</span> FileLines<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> then  begin    Isok<span class="token punctuation">:</span><span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>  end  <span class="token keyword">if</span> Isok<span class="token operator">=</span><span class="token boolean">true</span> then  begin    <span class="token function">MsgBox</span><span class="token punctuation">(</span><span class="token string">'查找成功'</span><span class="token punctuation">,</span>mbInformation<span class="token punctuation">,</span><span class="token constant">MB_OK</span> <span class="token punctuation">)</span>  end <span class="token keyword">else</span>  begin    <span class="token function">MsgBox</span><span class="token punctuation">(</span><span class="token string">'查找失败'</span><span class="token punctuation">,</span>mbError<span class="token punctuation">,</span><span class="token constant">MB_OK</span> <span class="token punctuation">)</span>  endend<span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 脚本语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装包制作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>swagger2 学习案例</title>
      <link href="/2019/02/27/springboot-swagger2-ui-jie-mian/"/>
      <url>/2019/02/27/springboot-swagger2-ui-jie-mian/</url>
      
        <content type="html"><![CDATA[<h1 id="SpringBoot-Swagger2-UI界面"><a href="#SpringBoot-Swagger2-UI界面" class="headerlink" title="SpringBoot + Swagger2 UI界面"></a>SpringBoot + Swagger2 UI界面</h1><p>本文介绍一个非常好用的自动化生成 Restful API 文档的工具——<strong>Swagger2</strong></p><h4 id="1-导入依赖–spingboot-swagger2"><a href="#1-导入依赖–spingboot-swagger2" class="headerlink" title="1.导入依赖–spingboot+swagger2"></a>1.导入依赖–spingboot+swagger2</h4><pre class=" language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> swagger RESTful API文档<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>dependency<span class="token operator">></span>    <span class="token operator">&lt;</span>groupId<span class="token operator">></span>com<span class="token punctuation">.</span>spring4all<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span>    <span class="token operator">&lt;</span>artifactId<span class="token operator">></span>swagger<span class="token operator">-</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span>    <span class="token operator">&lt;</span>version<span class="token operator">></span><span class="token number">1.7</span><span class="token punctuation">.</span><span class="token number">0</span><span class="token punctuation">.</span>RELEASE<span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span></code></pre><h4 id="2-swagger文档配置"><a href="#2-swagger文档配置" class="headerlink" title="2.swagger文档配置"></a>2.swagger文档配置</h4><pre class=" language-java"><code class="language-java">EnableSwagger2<span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">seagger2</span>  <span class="token keyword">extends</span> <span class="token class-name">WebMvcConfigurationSupport</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> Docket <span class="token function">creteRestApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        ApiInfo apiInfo<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">ApiInfoBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">"api项目接口文档"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">"符合Restfuk api"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">"1.0"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Docket</span><span class="token punctuation">(</span>DocumentationType<span class="token punctuation">.</span>SWAGGER_2<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">apiInfo</span><span class="token punctuation">(</span>apiInfo<span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">//以扫描的方式</span>                <span class="token punctuation">.</span><span class="token function">apis</span><span class="token punctuation">(</span>RequestHandlerSelectors                  <span class="token comment" spellcheck="true">//扫描路径更还包的位置</span>                <span class="token punctuation">.</span><span class="token function">basePackage</span><span class="token punctuation">(</span><span class="token string">"com.jstorm.count.controller"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">paths</span><span class="token punctuation">(</span>PathSelectors<span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addResourceHandlers</span><span class="token punctuation">(</span>ResourceHandlerRegistry registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>        registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">"/static/**"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">"classpath:/static/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        registry<span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">"/js/**"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">"classpath:/js/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        registry                <span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">"swagger-ui.html"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">"classpath:/META-INF/resources/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        registry                <span class="token punctuation">.</span><span class="token function">addResourceHandler</span><span class="token punctuation">(</span><span class="token string">"/webjars/**"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">addResourceLocations</span><span class="token punctuation">(</span><span class="token string">"classpath:/META-INF/resources/webjars/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="3-controller层给Restful-Api-注解添加注释"><a href="#3-controller层给Restful-Api-注解添加注释" class="headerlink" title="3.controller层给Restful Api 注解添加注释"></a>3.controller层给Restful Api 注解添加注释</h4><p><img src="./clipboard.png" alt="Alt text"><br><img src="./clipboard 5.png" alt="Alt text"></p><h4 id="4-spingboot启动入口添加注解"><a href="#4-spingboot启动入口添加注解" class="headerlink" title="4.spingboot启动入口添加注解"></a>4.spingboot启动入口添加注解</h4><pre class=" language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableWebMvc</span></code></pre><h4 id="5-效果"><a href="#5-效果" class="headerlink" title="5.效果"></a>5.效果</h4><p><img src="./clipboard.png" alt="Alt text"></p>]]></content>
      
      
      <categories>
          
          <category> 学习案例 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>技术网站导航</title>
      <link href="/2019/02/25/ji-zhu-wang-zhan-dao-hang/"/>
      <url>/2019/02/25/ji-zhu-wang-zhan-dao-hang/</url>
      
        <content type="html"><![CDATA[<h3 id="谷歌搜索"><a href="#谷歌搜索" class="headerlink" title="谷歌搜索"></a>谷歌搜索</h3><p><a href="https://1024ss.com/" target="_blank" rel="noopener">https://1024ss.com/</a></p><h3 id="在线画图-ProcessOn"><a href="#在线画图-ProcessOn" class="headerlink" title="在线画图-ProcessOn"></a>在线画图-ProcessOn</h3><p><a href="https://www.processon.com/" target="_blank" rel="noopener">https://www.processon.com/</a></p><h3 id="在线工具"><a href="#在线工具" class="headerlink" title="在线工具"></a>在线工具</h3><p><a href="https://tool.lu/" target="_blank" rel="noopener">https://tool.lu/</a></p><h3 id="Maven仓库"><a href="#Maven仓库" class="headerlink" title="Maven仓库"></a>Maven仓库</h3><p><a href="https://mvnrepository.com/" target="_blank" rel="noopener">https://mvnrepository.com/</a></p><h3 id="博客编辑器"><a href="#博客编辑器" class="headerlink" title="博客编辑器"></a>博客编辑器</h3><p><a href="https://maxiang.io/" target="_blank" rel="noopener">马克飞象</a><br><a href="https://www.mdeditor.com/" target="_blank" rel="noopener">MdEditor在线编辑器</a></p><h3 id="leetcode-题库"><a href="#leetcode-题库" class="headerlink" title="leetcode-题库"></a>leetcode-题库</h3><p><a href="https://leetcode-cn.com/" target="_blank" rel="noopener">https://leetcode-cn.com/</a></p><h3 id="知识论坛"><a href="#知识论坛" class="headerlink" title="知识论坛"></a>知识论坛</h3><p><a href="https://www.shiyanlou.com/" target="_blank" rel="noopener">实验楼</a>        <a href="http://www.zuidaima.com/" target="_blank" rel="noopener">最代码</a><br><a href="https://www.oschina.net/blog" target="_blank" rel="noopener">开源中国</a>                       <a href="http://www.zuidaima.com/" target="_blank" rel="noopener">最代码</a></p><h3 id="面试集锦"><a href="#面试集锦" class="headerlink" title="面试集锦"></a>面试集锦</h3><p><a href="http://www.sxt.cn/2019_Interview_questions/fengmian.html" target="_blank" rel="noopener">速学堂</a></p>]]></content>
      
      
      <categories>
          
          <category> 在线工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java-工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
